// Target: cave music for levels 1/2 of original game

// Write generic data in the free block past the end of level data
_GENERICADDR = 0x1BCE5;
// Overwrite the real channels at their original locations so we
// don't have to update the pointers
_SQ1ADDR = 0x18817;
_SQ2ADDR = 0x18923;
_TRIADDR = 0x18997;

// Song init. This only needs to happen on one channel
_SQ1 = { DRIVERDELAY(0x00) TEMPO(1) MASTSHIFT(0) };

// Channel init
_SQ1 = { CHANSHIFT(0) EFFECTS(0) DECAY(5) CHANVOL(0x0B)
	 REG1(0xBF) REG2(0x08) };
_SQ2 = { CHANSHIFT(0) EFFECTS(0) DECAY(5) CHANVOL(0x0B)
	 REG1(0xFF) REG2(0x08) };
_TRI = { CHANSHIFT(0x00) EFFECTS(0)
	 REG1(0xFF) REG2(0x08) };

//*******************************
// Triangle
//*******************************

//$kick = "NOISE(0x83, 0x0F)";
//$sn = "NOISE(0x83, 0x06)";
//$ch = "NOISE(0x81, 0x01)";

//$trkick = "c3 2 g2 2 d2 2";
//$trkick = "c3 2 g2 2 f2 1 d2 1";
//$trkick = "c3 1 bb2 1 a2 1 g2 1 e2 1 c2 1";
$trkick = "f3 1 eb3 1 c3 1 a2 1 f#2 1 d2 1";
_GENERIC = { ^triintro
	           $trkick r 6
	           f4 6 f3 6
	           $trkick r 6
	           f3 6 f2 6
	           $trkick r 6
	           c#3 6 c#2 6
	           $trkick r 6
	           c#3 6 c#4 6
	           
	           $trkick r 6
	           d#3 6 d#2 6
	           $trkick r 6
	           d#3 6 d#4 6
	           $trkick r 6
	           f3 6 f2 6
	           $trkick r 6
	           f4 6 f3 6
	           
	           RET() };

$trimainbase = "$trkick r 6 c3 6 f2 6";
_GENERIC = { ^trimainloop

             SETLOOP()
	             $trimainbase
	           REPLAYLOOP(1)
	           
	           RET() };

_GENERIC = { ^trimainnoloop

             $trimainbase
             $trimainbase
	           
	           RET() };

_GENERIC = { ^trimainbreak

             SETLOOP()
              $trkick
             REPLAYLOOP(2)
             
             f2 6 r 6
             
             $trkick
             r 18
	           
	           RET() };

//*******************************
// Sq1
//*******************************
$q = "CHANVOL(0x03)";
$l = "CHANVOL(0x0B)";

_GENERIC = { ^sqintro1

                f3 6     r 6
                c3 6  $q f3 6
             $l f3 6     c3 6
             $q f3 6  $l f3 6

                f3 12        
                c#3 6 $q f3 6
             $l f3 6     c#3 6
             $q f3 6  $l f3 6
	           
	           RET() };

_GENERIC = { ^sqintro2

                f3 12        
                d#3 6 $q f3 6
             $l f3 6     d#3 6
             $q f3 6  $l f3 6
             
                f5 6     c6 6
             $q f5 6  $l f5 6
                c6 6  $q f5 6
                c6 6  $l r 6
	           
	           RET() };

_GENERIC = { ^sqintro3

                f3 12        
                d#3 6 $q f3 6
             $l f3 6     d#3 6
             $q f3 6 ^sqintro3late $l c5 6
             
                a#4 6     g#4 6
             $q f4 6  $l c3 6
                a#3 6  $q g#3 6
                f3 6  $l c3 6
	           
	           RET() };

_GENERIC = { ^sq1main1

                c4 6         r 6
                f4 6      $q c4 6
             $l g4 3 r 3  $q f4 6
             $l g#4 6        a#4 18

             
                g#4 12
                f#4 6     $q g#4 6
             $l g#4 6        f4 18

             
                c#4 12
                c4 6      $q c#4 6
             $l a#3 6        c4 18

             
                g#3 12
                f3 12        
                g#3 12
             
             //
             
                   c#5 6     $q g#3 6
                $l f#5 6     $q c#5 6
                $l g#5 6     $q f#5 6
                $l a5  6        a#5 18

             
                g#5 12
                f5 6         $q g#5 6
             $l g#5 6           f5 90
             
                f3 6            a#3 6
	           
	           RET() };

_GENERIC = { ^sq2main1

                f3 3 r 3     f3 3 r 3
                c4 6      $q f3 3 r 3
             $l c4 3 r 3     c#4 3 r 3
                f3 6      $q c3 3 r 3

             $l f#2 3 r 3    f#2 3 r 3
                c#3 6     $q f#2 3 r 3
             $l a#3 3 r 3    a#3 3 r 3
                c#3 6     $q a#3 3 r 3

             $l c#3 3 r 3    c#3 3 r 3
                g#3 6     $q c#3 3 r 3
             $l c#4 3 r 3    c#4 3 r 3
                f3  3 r 3    d#3 3 r 3

                g#2 3 r 3    g#2 3 r 3
                d#3 6     $q g#3 3 r 3
             $l f3 3 r 3     f3 3 r 3
                g#2 3 r 3 $q f3 3 r 3
                
             $l
                SETLOOP()
                  c#3 3 r 3      c#2 3 r 3
                  c#3 6          c#4 3 r 3
                  CHANSHIFT(-7)
                REPLAYLOOP(1)
                
                CHANSHIFT(-12)
                d#3 3 r 3      d#2 3 r 3
                d#3 6          d#4 3 r 3
                
                c#3 3 r 3      c#2 3 r 3
                c#4 6          a#3 12
                            $q a#3 18
              
              
                SETLOOP()
                   $l a#3 3 r 3      a#3 3 r 3
                      a#4 6      $q  a#3 3 r 3
                REPLAYLOOP(2)
	           
	           RET() };

_SQ1 = { r 96 r 96 r 96 r 42 CHANSHIFT(0) CALL(^sqintro3late) };
_SQ1 = { CHANSHIFT(12)
         CALL(^sqintro1)
         CALL(^sqintro2)
         CALL(^sqintro1)
         CALL(^sqintro2) };
_SQ1 = { 
         CHANSHIFT(-12)
         CALL(^sq1main1) };

_SQ2 = { 
         CHANSHIFT(-12)
           SETLOOP()
           CALL(^sqintro1)
           CALL(^sqintro2)
           CALL(^sqintro1)
           CALL(^sqintro2)
           CHANSHIFT(0x00)
         REPLAYLOOP(1) };
_SQ2 = { 
         CHANSHIFT(-12)
         CALL(^sq2main1) };

_TRI = { SETLOOP() CALL(^triintro) REPLAYLOOP(3) };
_TRI = { 
          // F
          CALL(^trimainloop)

          // F#
          CHANSHIFT(0x01)
          CALL(^trimainloop)

          // C#
          CHANSHIFT(0xFC)
          CALL(^trimainloop)

          // G#
          CHANSHIFT(0x03)
          CALL(^trimainloop)

          // F# G# A# (x2)
          SETLOOP()
            CHANSHIFT(0x01)
            CALL(^trimainnoloop)
            CHANSHIFT(0x03)
            CALL(^trimainnoloop)
            CHANSHIFT(0x05)
            CALL(^trimainnoloop)
            CALL(^trimainnoloop)
          REPLAYLOOP(0x02)
          
          // F# G# A#
          CHANSHIFT(0x01)
          CALL(^trimainloop)
          CHANSHIFT(0x03)
          CALL(^trimainloop)
          CHANSHIFT(0x05)
          CALL(^trimainloop)
          
          // A# break
          CALL(^trimainbreak)

       };

