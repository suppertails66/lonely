// Target: cave music for levels 1/2 of original game

// Write generic data in the free block past the end of level data
_GENERICADDR = 0x1BCE5;
// Overwrite the real channels at their original locations so we
// don't have to update the pointers
_SQ1ADDR = 0x18817;
_SQ2ADDR = 0x18923;
_TRIADDR = 0x18997;

// Song init. This only needs to happen on one channel
_SQ1 = { DRIVERDELAY(0x00) TEMPO(1) MASTSHIFT(0) };

// Channel init
_SQ1 = { CHANSHIFT(0) EFFECTS(0) DECAY(10) CHANVOL(0x0B)
	 REG1(0xFF) REG2(0x08) };
_SQ2 = { CHANSHIFT(0) EFFECTS(0) DECAY(10) CHANVOL(0x0B)
	 REG1(0xFF) REG2(0x08) };
_TRI = { CHANSHIFT(0) EFFECTS(0)
	 REG1(0xFF) REG2(0x08) };

// Write patterns to generic area first so their labels are accessible
// when defining the "real" channel data
/*$drumtest = "NOISE(0x84, 0xFF) SETLOOP() c3 3 r 3 PLAYLOOP(7)";
_GENERIC = { ^tri1 $drumtest $drumtest RET() };
_GENERIC = { ^sq1 SETLOOP() c5 6 d5 6 f5 6 g5 6 PLAYLOOP(1) RET() };
_GENERIC = { ^sq2 SETLOOP() c4 12 g4 12 PLAYLOOP(1) RET() };

// Call the patterns and do anything else we need
_SQ1 = { CALL(^sq1) REG1(0x3F) CALL(^sq1) REG1(0xFF) };
_SQ2 = { CALL(^sq2) REG1(0xFF) CALL(^sq2) REG1(0x3F) };
_TRI = { CALL(^tri1) }; */

$q = "CHANVOL(0x03)";
$l = "CHANVOL(0x0B)";
_GENERIC = { ^label
	     $l c4 3 $q b4 3
	     $l d4 3 $q c5 3
	     $l e4 3 $q c4 3
	     $l f4 3 $q d4 3
	     $l g4 3 $q e4 3
	     $l a4 3 $q f4 3
	     $l b4 3 $q g4 3
	     $l c5 3 $q a4 3
	     RET() };

$kick = "NOISE(0x83, 0x0F)";
$sn = "NOISE(0x83, 0x06)";
$ch = "NOISE(0x81, 0x01)";
_GENERIC = { ^label2
//	     r 12 NOISE(0x8C, 0x8F)
	     $kick c3 3 r 3 $ch c3 3 r 3 $ch c3 3 r 3 $ch c3 3 r 3
	     $sn c3 3 r 3 $ch c3 3 r 3 $ch c3 3 r 3 $ch c3 3 r 3
	     $kick eb4 3 r 3 $ch eb4 3 r 3 $ch f4 3 r 3 $ch f4 3 r 3
	     $sn g3 3 r 3 $ch g3 3 r 3 $ch g3 3 r 3 $ch g3 3 r 3
	     RET() };

/*_GENERIC = { ^noiseslide24
//	     r 12 NOISE(0x8C, 0x8F)
	     NOISE(0x81, 0x01) r2 NOISE(0x82, 0x02) r2  NOISE(0x83, 0x03) r2
	     NOISE(0x84, 0x04) r2 NOISE(0x85, 0x05) r2  NOISE(0x86, 0x06) r2
	     NOISE(0x87, 0x07) r2 NOISE(0x88, 0x08) r2  NOISE(0x89, 0x09) r2
	     NOISE(0x8A, 0x0A) r2 NOISE(0x8B, 0x0B) r2  NOISE(0x8C, 0x0C) r2
	     RET() }; */

_GENERIC = { ^label3
	 c4 6 d4 6 f4 6 g4 6 r 12      c6 6 d6 6
	 f4 6 eb4 6 g4 6 f4 6 c4 6 eb5 6 g5 6 f5 6 RET() };

$macro = "c4 6
	  c5 6
	  c6 6
	  c7 6";


//_SQ1 = { CALL(^label) CHANSHIFT(2) CALL(^label) CHANSHIFT(4)
//	 CALL(^label) CHANSHIFT(5) CALL(^label) CHANSHIFT(7)
//	 CALL(^label) CHANSHIFT(9) CALL(^label) CHANSHIFT(11)
//	 CALL(^label) };
_SQ1 = { ^fordelay SETLOOP() CALL(^label3) PLAYLOOP(3) REG1(0xBF) SETLOOP() CALL(^label3) PLAYLOOP(3) };
_SQ2 = { $q r15 $macro JUMP(^fordelay) };
_TRI = { SETLOOP() CALL(^label2) PLAYLOOP(15) };

/*$q = "CHANVOL(0x03)";
$l = "CHANVOL(0x0B)";
_SQ1 = { $l 3c4 $q 3b4 $l 3d4 $q 3c5 $l 3e4 $q 3c4 $l 3f4 $q 3d4 3 $l 3g4 $q 3e4 $l 3a4 $q 3f4 $l 3b4 $q 3g4 $l 3c5 $q 3a4 };
_SQ2 = { 48r };
_TRI = { 48r }; */

