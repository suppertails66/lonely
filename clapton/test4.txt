// Target: cave music for levels 1/2 of original game

// Write generic data in the free block past the end of level data
_GENERICADDR = 0x1BCE5;
// Overwrite the real channels at their original locations so we
// don't have to update the pointers
_SQ1ADDR = 0x18817;
_SQ2ADDR = 0x18923;
_TRIADDR = 0x18997;

// Song init. This only needs to happen on one channel
_SQ1 = { DRIVERDELAY(0x00) TEMPO(1) MASTSHIFT(0) };

// Channel init
_SQ1 = { CHANSHIFT(0) EFFECTS(0) DECAY(5) CHANVOL(0x0B)
	 REG1(0xBF) REG2(0x08) };
_SQ2 = { CHANSHIFT(0) EFFECTS(0) DECAY(5) CHANVOL(0x0B)
	 REG1(0xFF) REG2(0x08) };
_TRI = { CHANSHIFT(0) EFFECTS(0)
	 REG1(0xFF) REG2(0x08) };
	 
$q = "CHANVOL(0x04)";
$l = "CHANVOL(0x0B)";

//*******************************
// Triangle
//*******************************

//$kick = "NOISE(0x83, 0x0F)";
//$sn = "NOISE(0x83, 0x06)";
//$ch = "NOISE(0x81, 0x01)";
$trkick = "f3 1 eb3 1 c3 1 a2 1 f#2 1 d2 1";
$trrevsn = "g#1 1 b1 1 e2 1 f#2 1 a2 1 b2 1 d3 1 e3 1 g3 1 a3 1 c4 1 d4 1";

$revsn = "NOISE(0xB1, 0x74) r1 NOISE(0xB2, 0x74) r1 NOISE(0xB5, 0x74) r1 NOISE(0xB8, 0x74) r1 NOISE(0xBA, 0x74) r1 NOISE(0xBF, 0x74) r1 NOISE(0x30, 0x00)";
$revch = "NOISE(0xB1, 0x71) r1 NOISE(0xB2, 0x71) r1 NOISE(0xB5, 0x71) r1 NOISE(0xB8, 0x71) r1 NOISE(0xBA, 0x71) r2 NOISE(0x30, 0x00)";
$revkick = "NOISE(0xB1, 0x7E) r1 NOISE(0xB2, 0x7E) r1 NOISE(0xB5, 0x7E) r1 NOISE(0xB8, 0x7E) r1 NOISE(0xBA, 0x7E) r1 NOISE(0xBF, 0x7E) r1 NOISE(0x30, 0x00)";
$revkick_12 = "NOISE(0xB1, 0x7E) r1 NOISE(0xB2, 0x7E) r1 NOISE(0xB3, 0x7E) r1 NOISE(0xB4, 0x7E) r1 NOISE(0xB5, 0x7E) r1 NOISE(0xB6, 0x7E) r1 NOISE(0xBD, 0x7E) r1 NOISE(0xBF, 0x7E) r5 NOISE(0x30, 0x00)";
//$trrevkick = "g#1 1 c#2 1 f#2 1 b2 1 e3 1 a3 1 d4 1";
//_GENERIC = { ^minarp3t
//	     d4 1 f4 1 a4 1
//	     RET()
//};
$minarp_d3_3t = "d3 1 f3 1 a3 1";
//$minarp_d4_3t_1 = "TEMPO(1) $minarp_d4_3t";
//$minarp_d4_3t_2 = "TEMPO(2) $minarp_d4_3t";
//$minarp_f4_3t = "f4 1 g#4 1 c5 1";
//$minarp_a4_3t = "a4 1 c5 1 e5 1";
//$minarp_g4_3t = "g4 1 a#4 1 d5 1";

_GENERIC = { ^revsn_6

	     $revsn
	     
	     RET()
};

_GENERIC = { ^revkick_6

	     $revkick
	     
	     RET()
};

_GENERIC = { ^revkick_12

	     $revkick_12
	     
	     RET()
};

_GENERIC = { ^intro_minarp

	     CHANVOL(0x01)
	     SETLOOP()
	       $minarp_d3_3t $minarp_d3_3t
	       CHANVOL(0x03)
	     REPLAYLOOP(1)

	     CHANVOL(0x05)
	     SETLOOP()
	       $minarp_d3_3t $minarp_d3_3t
	       CHANVOL(0x07)
	     REPLAYLOOP(1)

	     CHANVOL(0x09)
	     SETLOOP()
	       $minarp_d3_3t $minarp_d3_3t
	       CHANVOL(0x0B)
	     REPLAYLOOP(1)

	     CHANVOL(0x0D)
	     SETLOOP()
	       $minarp_d3_3t $minarp_d3_3t
	       CHANVOL(0x0F)
	     REPLAYLOOP(1)
	     
	     RET()
};

_GENERIC = { ^tri_mloop

	     $trkick
	     r6
	     d3 3 r 3
	     d2 3 r 3
	     
	     RET()
};

$sq12 = "REG1(0x3F)";
$sq25 = "REG1(0x7F)";
$sq50 = "REG1(0xBF)";
$sq75 = "REG1(0xFF)";
_GENERIC = { ^intro2_sq

	     $sq50
	     $l d2 3 $q d2 3
	     $l d2 3 $q d2 3
	     $l d2 6
	        r 6
	     
	     $sq25
	     $l d2 3 $q d2 3
	     $l d2 3 $q d2 3
	     $l d2 3 $q d2 3
	     $l d2 3 $q d2 3
	     
	     $sq75
	     $l d2 3 $q d2 3
	     $l d2 3 $q d2 3
	     $l d2 6
	        r 6
	     
	     $sq12
	     $l d2 3 $q d2 3
	     $l d2 3 $q d2 3
	     $l d2 3 $q d2 3
	     $l d2 3 $q d2 3
	     
	     RET()
};

_SQ1 = { SETLOOP()
	  CALL(^revkick_6) r 12 CALL(^revsn_6)
	  r 12 CALL(^revsn_6) r 6
	  CALL(^revkick_6) r 6 CALL(^revsn_6) r12
	      CALL(^revsn_6) CALL(^revsn_6) r6
	 REPLAYLOOP(1) };
_SQ1 = { CHANSHIFT(-5)
	 SETLOOP()
	  CALL(^intro2_sq)
	 REPLAYLOOP(4)
};
/*_SQ1 = { SETLOOP()
	  CALL(^revkick_12) r 6 CALL(^revsn_6)
	  r 12 CALL(^revsn_6) r 6
	  CALL(^revkick_12) CALL(^revsn_6) r12
	      CALL(^revsn_6) CALL(^revsn_6) r6
	 REPLAYLOOP(1) }; */


_SQ2 = { CALL(^intro_minarp)
	 CHANSHIFT(3) CALL(^intro_minarp)
	 CHANSHIFT(7) CALL(^intro_minarp)
	 CHANSHIFT(5) CALL(^intro_minarp)
	 CHANSHIFT(0)
};
_SQ2 = { CHANSHIFT(0)

	 SETLOOP()
	  CALL(^intro2_sq)
	 REPLAYLOOP(4)
};



_TRI = { SETLOOP()
	  r 24 $trrevsn r 12
	 REPLAYLOOP(3)  };
_TRI = { SETLOOP()
	  CALL(^tri_mloop)
	 REPLAYLOOP(15)  };

