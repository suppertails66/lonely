; Comments start at a semicolon and run to the end of the line.

; Predefined variables start with _
; Numbers can be specified in decimal or hexadecimal (prefix 0x).
; These variables control the base address for each channel's data, used
; for calculating jump addresses.
; Expressions are terminated with ;
_SQ1BASE = 32768;
_SQ2BASE = 0x8100;
_TRIBASE = 0x8200;

; User-defined variable names begin with a $
$var = c4 6 d4 6 e4 6 f4 6;

; Note data is specified as: [note name][octave number][SPACE][duration]
$var2 = g4 6 a4 6 b4 6 c5 6;

; Data for each channel is defined by assigning to these predfined variables.
; Variables 
_SQ1DATA = $var $var2;

; Delay(??) command (op 80)
$delay = c4 6 DELAY() e4 6

; Channel volume/? (op 81)
$chanvol = c4 6 CHANVOL(0x0F) e4 6

; Play noise (op 82) -- byte 1 = 400C, byte 2 = 400E
$playnoise = c4 6 NOISE(0x80, 0x84) e4 6

; Loop point start is set (op 83) with | and triggered (op 84) with <[numloops]
$loop = c4 6 | e4 6 g4 6 <0x10 c5 6;

; Base tempo (op 85)
$tempo = c4 6 TEMPO(0x01) e4 6

; Sound driver start delay(?) (op 86)
$driverdelay = c4 6 DRIVERDELAY(0x99) e4 6

; Channel key shift (op 87)
$channeltranspose = c4 6 CHANSHIFT(12) e4 6

; Master key shift (op 88)
$mastertranspose = c4 6 MASTERSHIFT(12) e4 6

; "Effects" (op 89)
; Bit 3 set = no note decay?
; Bit 6 set = play noise each time a note is triggered
; Bit 7 set = don't turn off pitch bend after next note plays
$chaneffects = c4 6 CHANEFFECTS(0x84) e4 6

; Call pattern (op 8A -- NONSTANDARD EXTENSION, dummy in original driver)
; Return from pattern (op 8B -- NONSTANDARD EXTENSION, dummy in original driver)
$pattern = ^patternStart c4 6 e4 6 g4 6 c5 6 RET()
$patternuse = c4 6 CALL(patternStart) e4 6

; Channel note decay (op 8C)
$chandecay = c4 6 CHANDECAY(0x05) e4 6

; Dummy (op 8D)
$op8d = c4 6 OP8D() e4 6

; Sound driver global slowdown (op 8E)
$driverslowdown = c4 6 DRIVERSLOWDOWN(0x04) e4 6

; Unknown -- write to byte $16 of current channel (op 8F)
$op8f = c4 6 OP8F(0xFF) e4 6

; Jump to address (op 90)
; Define a position marker with ^ in channel data, then pass as parameter.
$jump = c4 6 e4 6 ^jumpPosition g4 6 c4 6 JUMP(jumpPosition)

; Set register $4000 (sq) or $4008 (tri) (op 91)
$setreg1 = c4 6 SETREG1(0x40) e4 6

; Set register $4003 (sq) or $400B (tri) (op 92)
$setreg2 = c4 6 SETREG2(0x40) e4 6

; Set register $4001 (sq only) (op 93)
$setreg3 = c4 6 SETREG3(0x40) e4 6

; Set length effect (194)??? (op 94)
; 0x80 = staccato, 0x7F = full legato, values < 0x10 = volume???
$chanleneffect = c4 6 CHANLENEFFECT(0x80)

; Dummy (op 95)
$op95 = c4 6 OP95() e4 6